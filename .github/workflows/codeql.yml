# Для більшості проєктів цей файл робочого процесу не потребує змін; вам просто потрібно
# закомітити його у ваш репозиторій.
#
# Ви можете змінити цей файл, щоб змінити набір мов для аналізу,
# або додати користувацькі запити чи логіку складання.
#
# ******** ПРИМІТКА ********
# Ми намагалися визначити мови у вашому репозиторії. Будь ласка, перевірте
# матрицю `language`, визначену нижче, щоб підтвердити, що ви маєте правильний набір
# підтримуваних мов CodeQL.
name: "CodeQL"
on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  schedule:
    - cron: '19 6 * * 4'

jobs:
  analyze:
    name: Analyze (${{ matrix.language }})
    runs-on: ${{ matrix.language == 'swift' && 'macos-latest' || 'ubuntu-latest' }}
    timeout-minutes: ${{ matrix.language == 'swift' && 120 || 360 }}
    permissions:
      security-events: write
      packages: read
      actions: read
      contents: read

    strategy:
      fail-fast: false
      matrix:
        include:
          - language: javascript-typescript
            build-mode: none
        # CodeQL підтримує такі значення ключових слів для 'language': 'c-cpp', 'csharp', 'go', 'java-kotlin', 'javascript-typescript', 'python', 'ruby', 'swift'
        # Використовуйте `c-cpp`, щоб аналізувати код, написаний на C, C++ або обох
        # Використовуйте 'java-kotlin', щоб аналізувати код, написаний на Java, Kotlin або обох
        # Використовуйте 'javascript-typescript', щоб аналізувати код, написаний на JavaScript, TypeScript або обох

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Verify pom.xml exists
        run: |
          if [ ! -f pom.xml ]; then
            echo "Error: pom.xml not found!"
            exit 1
          fi

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          build-mode: ${{ matrix.build-mode }}

      - if: matrix.build-mode == 'manual'
        shell: bash
        run: |
          echo 'Якщо ви використовуєте "manual" режим складання для однієї або кількох мов, які ви аналізуєте, замініть це командами для складання вашого коду, наприклад:'
          echo '  make bootstrap'
          echo '  make release'
          exit 1

      - name: React Deploy - Github Pages
        uses: fcodelabs/react-deploy-github-pages-action@v1.0.0
        with:
          build_dir: # вкажіть директорію для зборки

      - name: Setup Java JDK
        uses: actions/setup-java@v4.2.1
        with:
          java-version: '11'
          distribution: 'adopt'
          java-package: 'jdk'
          check-latest: true
          server-id: github
          server-username: GITHUB_ACTOR
          server-password: ${{ secrets.GITHUB_TOKEN }}
          settings-path: ~/.m2
          overwrite-settings: true
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg-passphrase: ${{ secrets.GPG_PASSPHRASE }}
          cache: maven
          cache-dependency-path: '**/pom.xml'
          job-status: ${{ job.status }}
          token: ${{ github.token }}
          mvn-toolchain-id: my-toolchain
          mvn-toolchain-vendor: adoptopenjdk

      - name: Setup Node.js environment
        uses: actions/setup-node@v4.0.2
        with:
          always-auth: false
          node-version: '14.x'
          architecture: x64

      - name: Setup Go environment
        uses: actions/setup-go@v5.0.1
        with:
          go-version: '1.16'
          check-latest: true
          cache: true
          cache-dependency-path: 'go.sum'

      - name: Cache
        uses: actions/cache@v4.0.2
        with:
          path: 'node_modules'
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v4.0.0
        with:
          dotnet-version: '6.0.x'
          cache: true
          cache-dependency-path: 'packages.lock.json'

      - name: YAML/JSON validation against JSON Schema
        uses: lyubick/action-YAML-schema-validator@v4
        with:
          json-schema-file: # вкажіть файл JSON Schema
          yaml-json-file-dir: # вкажіть директорію або файл YAML/JSON для валідації
          recursive: false
          ignore-empty: true
          schema-mapping: 

      - name: React Project Checker
        uses: VictorDanilov/react-project-checker-action@v0.0.1-alpha
